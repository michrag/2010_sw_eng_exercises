//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : FS.java
//  @ Date : 17/06/2010
//  @ Author : michrag
//
//

package dominio;
import java.util.*;


public class FS
{
    private List<Treno> treni;
    private List<Tratta> tratte;
    private List<Stazione> stazioni;

    // pattern Singleton
    private static FS instance = null;

    private FS()
    {
        treni = new ArrayList<Treno>();
        tratte = new ArrayList<Tratta>();
        stazioni = new ArrayList<Stazione>();
    }

    public static FS getInstance()
    {
        if(instance == null)
        {
            instance = new FS();
        }

        return instance;
    } // fine pattern Singleton

    public List<Treno> getTreni()
    {
        return treni;
    }


    public List<Tratta> getTratte()
    {
        return tratte;
    }


    public void addTratta(Tratta t)
    {
        tratte.add(t);
    }

    public Tratta getTratta(String codiceTratta)
    {
        for(Iterator<Tratta> i = tratte.iterator(); i.hasNext();)
        {
            Tratta tratta = (Tratta)i.next();

            if(tratta.getNumVerso().equalsIgnoreCase(codiceTratta))
            {
                return tratta;
            }
        }

        throw new RuntimeException("Tratta inesistente.");
    }

    public Stazione getStazione(String nomeStazione)
    {
        for(Iterator<Stazione> i = stazioni.iterator(); i.hasNext();)
        {
            Stazione stazione = (Stazione)i.next();

            if(stazione.getNome().equalsIgnoreCase(nomeStazione))
            {
                return stazione;
            }
        }

        throw new RuntimeException("Stazione inesistente.");
    }

    public void addStazione(Stazione s)
    {
        stazioni.add(s);

    }

    public void addTreno(Treno t)
    {
        treni.add(t);

    }

    public Treno getTreno(String idTreno)
    {
        for(Iterator<Treno> i = treni.iterator(); i.hasNext();)
        {
            Treno treno = (Treno)i.next();

            if(treno.getId().equalsIgnoreCase(idTreno))
            {
                return treno;
            }
        }

        throw new RuntimeException("Treno inesistente.");
    }


}
